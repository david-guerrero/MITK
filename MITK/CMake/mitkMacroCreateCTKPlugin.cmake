MACRO(MACRO_CREATE_MITK_CTK_PLUGIN)

  MACRO_PARSE_ARGUMENTS(_PLUGIN "EXPORT_DIRECTIVE;EXPORTED_INCLUDE_SUFFIXES;MODULE_DEPENDENCIES;SUBPROJECTS" "TEST_PLUGIN" ${ARGN})

  MITK_CHECK_MODULE(_MODULE_CHECK_RESULT Mitk ${_PLUGIN_MODULE_DEPENDENCIES})
  IF(NOT _MODULE_CHECK_RESULT)
    MITK_USE_MODULE(Mitk ${_PLUGIN_MODULE_DEPENDENCIES})
   
    LINK_DIRECTORIES(${ALL_LIBRARY_DIRS})
    INCLUDE_DIRECTORIES(${ALL_INCLUDE_DIRECTORIES})

    IF(_PLUGIN_TEST_PLUGIN)
      SET(is_test_plugin "TEST_PLUGIN")
    ELSE()
      SET(is_test_plugin)
    ENDIF()

    MACRO_CREATE_CTK_PLUGIN(EXPORT_DIRECTIVE ${_PLUGIN_EXPORT_DIRECTIVE}
                            EXPORTED_INCLUDE_SUFFIXES ${_PLUGIN_EXPORTED_INCLUDE_SUFFIXES}
                            ${is_test_plugin})

    TARGET_LINK_LIBRARIES(${PLUGIN_TARGET} ${ALL_LIBRARIES})

    IF(MITK_DEFAULT_SUBPROJECTS AND NOT MY_SUBPROJECTS)
      SET(MY_SUBPROJECTS ${MITK_DEFAULT_SUBPROJECTS})
    ENDIF()

    IF(MY_SUBPROJECTS)
      SET_PROPERTY(TARGET ${PLUGIN_TARGET} PROPERTY LABELS ${MY_SUBPROJECTS})
      FOREACH(subproject ${MY_SUBPROJECTS})
        ADD_DEPENDENCIES(${subproject} ${PLUGIN_TARGET})
      ENDFOREACH()
    ENDIF()
  ELSE(NOT _MODULE_CHECK_RESULT)
    IF(NOT MITK_BUILD_ALL_PLUGINS)
      MESSAGE(SEND_ERROR "${PLUGIN_TARGET} is missing requirements and won't be built. Missing: ${_MODULE_CHECK_RESULT}")
    ELSE()
      MESSAGE(STATUS "${PLUGIN_TARGET} is missing requirements and won't be built. Missing: ${_MODULE_CHECK_RESULT}")
    ENDIF()
  ENDIF(NOT _MODULE_CHECK_RESULT)
ENDMACRO()

