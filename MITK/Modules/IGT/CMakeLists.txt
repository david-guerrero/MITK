INCLUDE(MITKIGTHardware.cmake)

IF(MITK_USE_MICRON_TRACKER)
  SET(INCLUDE_DIRS_INTERNAL ${INCLUDE_DIRS_INTERNAL} ${MITK_MICRON_TRACKER_INCLUDE_DIR})
  SET(ADDITIONAL_LIBS ${ADDITIONAL_LIBS} ${MITK_MICRON_TRACKER_LIB})
ENDIF(MITK_USE_MICRON_TRACKER)

IF(MITK_USE_MICROBIRD_TRACKER)
  SET(INCLUDE_DIRS_INTERNAL ${INCLUDE_DIRS_INTERNAL} ${MITK_USE_MICROBIRD_TRACKER_INCLUDE_DIR})
  SET(ADDITIONAL_LIBS ${ADDITIONAL_LIBS} ${MITK_USE_MICROBIRD_TRACKER_LIB})
ENDIF(MITK_USE_MICROBIRD_TRACKER)

MITK_CREATE_MODULE(MitkIGT
  SUBPROJECTS MITK-IGT
  INCLUDE_DIRS IGTFilters IGTTrackingDevices IGTToolManagement
  INTERNAL_INCLUDE_DIRS ${INCLUDE_DIRS_INTERNAL}
  DEPENDS Mitk tinyxml SceneSerialization
  PROVIDES mitkIGT
  ADDITIONAL_LIBS "${ADDITIONAL_LIBS}"
)


MITK_CHECK_MODULE(_RESULT MitkIGT)
IF(_RESULT)
  MESSAGE(STATUS "IGTTutorialStep1 won't be built. Missing: ${_RESULT}")
ELSE(_RESULT)
## create IGT config
CONFIGURE_FILE(mitkIGTConfig.h.in ${PROJECT_BINARY_DIR}/mitkIGTConfig.h @ONLY)

# add test programm for serial communication classADD_EXECUTABLE(SerialCommunicationTest IGTTrackingDevices/mitkSerialCommunicationTest.cpp)TARGET_LINK_LIBRARIES(SerialCommunicationTest mitkIGT mitkCore tinyxml PocoXML)

ADD_EXECUTABLE (IGTTutorialStep1 IGTTutorial/IGTTutorialStep1.cpp)
TARGET_LINK_LIBRARIES(IGTTutorialStep1 mitkIGT mitkCore tinyxml PocoXML)

ADD_SUBDIRECTORY(Testing)
ENDIF(_RESULT)

